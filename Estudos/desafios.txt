Nível Fácil:
Contador de Palavras: Crie um programa que lê um arquivo TXT e conta quantas vezes cada palavra aparece no arquivo. Imprima os resultados em ordem alfabética.
Substituição de Texto: Crie um programa que lê um arquivo TXT e substitui todas as ocorrências de uma palavra específica por outra. Salve o resultado em um novo arquivo TXT.
Remover Linhas Duplicadas: Crie um programa que lê um arquivo TXT e remove todas as linhas duplicadas. Salve o resultado em um novo arquivo TXT.
Nível Médio:
Extração de Informações: Crie um programa que lê um arquivo TXT contendo dados tabulares (como uma lista de produtos com nome, preço e quantidade em estoque) e extrai as informações de cada coluna, armazenando-as em uma lista separada.
Criar um Índice: Crie um programa que lê um arquivo TXT com um texto longo e cria um índice com as palavras-chave e suas respectivas linhas. Salve o índice em um novo arquivo TXT.
Criptografia Simples: Crie um programa que lê um arquivo TXT, cifra cada caractere com uma chave (por exemplo, deslocando o caractere uma posição na tabela ASCII), e salva o resultado em um novo arquivo TXT.
Nível Difícil:
Comparação de Arquivos: Crie um programa que compara dois arquivos TXT e identifica as linhas que são diferentes entre os dois arquivos.
Formatação de Dados: Crie um programa que lê um arquivo TXT com dados desordenados (como um texto com diversas informações em uma linha) e formata os dados em uma estrutura organizada (por exemplo, em colunas).
Análise de Logs: Crie um programa que lê um arquivo TXT com registros de log e realiza uma análise estatística (por exemplo, contar o número de erros, encontrar os erros mais comuns, etc.).
Dicas:
Use as funções open(), read(), write(), readline() e readlines() para manipular os arquivos TXT.
Use listas, dicionários e outras estruturas de dados para organizar e processar os dados.
Use a função split() para separar os dados em diferentes partes.
Utilize o módulo os para manipular arquivos e diretórios.